import websocket
import json
import requests
import os
import asyncio
import time
import sys

def get_approval(key, secret):
    """웹소켓 접속키 발급"""
    url = 'https://openapi.koreainvestment.com:9443'
    headers = {
        "content-type": "application/json"
    }
    body = {
        "grant_type": "client_credentials",
        "appkey": key,
        "secretkey": secret
    }
    PATH = "oauth2/Approval"
    URL = f"{url}/{PATH}"
    res = requests.post(URL, headers=headers, data=json.dumps(body))
    approval_key = res.json()["approval_key"]
    return approval_key

# 아래에 본인의 APP_KEY와 APP_SECRET을 넣어주세요.
APP_KEY = "PSJb87DHmkWoJ3CqURvGCi4JlIsMLafjGwj8"
APP_SECRET = "NaBNQqD5Z1I3KEwtfNoDYwzuVsoY5qDh8wY0CxB6JzqgTTK8qR7MN98hRZBvDuD3w4Q0x5ujMUgyGvdFokXxus79g58OqPwsNr+bILSsWjhlgdJ1Hwuqwuxx6EMXNxtZRAXYeyFVANgIHAGUFpSzxfV3njXHs8enCW3afuGF1+/Y9kpVr5U="
URL = 'ws://ops.koreainvestment.com:21000'  # 실전계좌
# URL = 'ws://ops.koreainvestment.com:31000' # 모의계좌

APPROVAL_KEY = get_approval(APP_KEY, APP_SECRET)
# print("approval_key [%s]" % (APPROVAL_KEY))

def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

def stockspurchase(data_cnt, data):
    """주식 체결 데이터 처리"""
    # print(data_cnt)
    # print("============================================")
    menulist = "유가증권단축종목코드|주식체결시간|주식현재가|전일대비부호|전일대비|전일대비율|가중평균주식가격|주식시가|주식최고가|주식최저가|매도호가1|매수호가1|체결거래량|누적거래량|누적거래대금|매도체결건수|매수체결건수|순매수체결건수|체결강도|총매도수량|총매수수량|체결구분|매수비율|전일거래량대비등락율|시가시간|시가대비구분|시가대비|최고가시간|고가대비구분|고가대비|최저가시간|저가대비구분|저가대비|영업일자|신장운영구분코드|거래정지여부|매도호가잔량|매수호가잔량|총매도호가잔량|총매수호가잔량|거래량회전율|전일동시간누적거래량|전일동시간누적거래량비율|시간구분코드|임의종료구분코드|정적VI발동기준가"
    menustr = menulist.split('|')
    # print(menustr)
    menustr = ["유가증권단축종목코드", "주식현재가", "전일대비율", "주식시가",
              "누적거래대금", "매도체결건수", "매수체결건수", "순매수체결건수",
              "체결강도", "총매도수량", "총매수수량", "전일거래량대비등락율", "시가대비",
              "매도호가잔량", "매수호가잔량", "총매도호가잔량", "총매수호가잔량",
              "거래량회전율", "전일동시간누적거래량비율"]

    pValue = data.split('^') 
    index = [0, 2, 5, 7, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 36, 37, 38, 39, 40, 42]  
    for cnt in range(data_cnt):     # 넘겨받은 체결데이터 개수만큼 print 한다 
        # print("### [%d / %d]"%(cnt+1, data_cnt)) 
        
        for menu, i in zip(menustr, index): 
            print("%-13s[%s]" % (menu, pValue[i])) 
        clear()
code_list = ['005930', '066570', '047050']
senddata_list = []

for i in code_list:
    temp = '{"header":{"approval_key": "%s","custtype":"P","tr_type":"%s","content-type":"utf-8"},"body":{"input":{"tr_id":"%s","tr_key":"%s"}}}' % (APPROVAL_KEY, '1', 'H0STCNT0', i)
    senddata_list.append(temp)

try:
    ws.close()
except:
    pass

ws = websocket.WebSocket()
ws.connect(URL, ping_interval=60)

for senddata in senddata_list:
  ws.send(senddata)

while True:
    data = ws.recv()

    # print(data) # 정제되지 않은 Request / Response 출력

    if data[0] == '0':
        recvstr = data.split('|')   
        # 수신데이터가 실데이터 이전은 '|'로 나뉘어져있어 split

        trid0 = recvstr[1]

        # print("#### 주식체결 ####")
        # print(recvstr)

        data_cnt = int(recvstr[2])   
        # 체결데이터 개수

        stockspurchase(data_cnt, recvstr[3])

    elif data[0] == '1':
        pass

        # print(data)
        # recvstr = data.split('|')  # 수신데이터가 실데이터 이전은 '|'로 나뉘어져있어 split
        # trid0 = recvstr[1]
        # if trid0 == "H0STCNI0" or trid0 == "H0STCNI9":  # 주실체결 통보 처리
        #     print("#### 주식체결통보 ####")
        #     # stocksigningnotice(recvstr[3], aes_key, aes_iv

    else:
        jsonObject = json.loads(data)

        trid = jsonObject["header"]["tr_id"]

        if trid != "PINGPONG":
            rt_cd = jsonObject["body"]["rt_cd"]

            if rt_cd == '1':     
                # 에러일 경우 처리
                print("### ERROR RETURN CODE [ %s ] MSG [ %s ]" % (rt_cd, jsonObject["body"]["msg1"]))
                pass

            elif rt_cd == '0':   
                # 정상일 경우 처리
                print("### RETURN CODE [ %s ] MSG [ %s ]" % (rt_cd, jsonObject["body"]["msg1"]))
                
                # 체결통보 처리를 위한 AES256 KEY, IV 처리 단계
                if trid == "H0STCNI0" or trid == "H0STCNI9":
                    aes_key = jsonObject["body"]["output"]["key"]
                    aes_iv = jsonObject["body"]["output"]["iv"]

                    print("### TRID [%s] KEY[%s] IV[%s]" % (trid, aes_key, aes_iv))

        elif trid == "PINGPONG":
            print("### RECV [PINGPONG] [%s]" % (data))
            await websocket.pong(data)
            print("### SEND [PINGPONG] [%s]" % (data))
